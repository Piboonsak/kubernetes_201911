Instruction for Workshop 1.7_Resource_Management_and_HPA:
Note: This instruction will demonstrate about how to manage resouce in cluster with namespace and HPA:
====================================================
Part0: Create Dashboard
====================================================
1. Create Dashboard by command:
	kubectl apply -f https://raw.githubusercontent.com/praparn/kubernetes_201911/master/WorkShop_1.7_Resource_Management/dashboard.yml

2. Check Bearer Token for access by command:
kubectl -n kubernetes-dashboard describe secret $(kubectl -n kubernetes-dashboard get secret | grep admin-user | awk '{print $1}') | grep ^token: | sed 's/token:[ ]*/Token:\n/'

	kubectl -n kubernetes-dashboard describe secret $(kubectl -n kubernetes-dashboard get secret | grep admin-user | awk '{print $1}')
	*Remark: Record Token:
	Ex:
	------------------------------------------------------------------------------------
eyJhbGciOiJSUzI1NiIsImtpZCI6IjRDekxqMXZhU19sU09zM3FZSHBtOS01WWF6WGljelE0Z1F0dXNheUdaVGMifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJrdWJlcm5ldGVzLWRhc2hib2FyZCIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJhZG1pbi11c2VyLXRva2VuLXR6c2tzIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQubmFtZSI6ImFkbWluLXVzZXIiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC51aWQiOiI1MGI4NDA0YS1hNWMyLTRlNjMtYmUyZS00M2UyYjk4MjIzODUiLCJzdWIiOiJzeXN0ZW06c2VydmljZWFjY291bnQ6a3ViZXJuZXRlcy1kYXNoYm9hcmQ6YWRtaW4tdXNlciJ9.k5_eAm6oLNykUxNVvfqnWDoriqo-J3rkzTZgDZ4BJLApgKeX-nKu4Y4eD96Yno1AP6mdX6lYehWOhAchtcBIH4SVkJiN2LzEoJAB1tddNeOFoIDFoh-NnjMZYIVq2jq1QEMRIdelVS3baFshHaRIH0aBQD4okByhbHYpPCVXC9DUiG20MgNk_e0euuNDyHo8WyEKbCNYZqFuWWDmsaN7gloH8fj2_HR96CygSKQLbKBaEefyYsLtiZBNyVds1pF2OCDmUgo72wVt4msCZAjE90GjWX2Rgk-ltp_zYReMs41aBf0H6MzkL16CDrQwMMzgF9iQpc8NwSv8OCYJs9No0A
	------------------------------------------------------------------------------------

3. Open Kubernetes's proxy for operate:
	kubectl proxy --address='<Private IP>' --accept-hosts='^*$'

	*Test by open browser: 
	http://<Public IP>:8001/api/v1/namespaces/kubernetes-dashboard/services/https:kubernetes-dashboard:/proxy/
====================================================
Part1: Container level configuration:
====================================================
1. Get command prompt for access folder workshop 1.7 by command :cd /xxxx/WorkShop_1.7_Resource_Management_and_HPA
2. Check file on WorkShop
3. Create Pods/Cadvisor by command:
	kubectl create -f webtest_pod.yml 	(In case run via github: kubectl create -f https://raw.githubusercontent.com/praparn/kubernetes_201911/master/WorkShop_1.7_Resource_Management/webtest_pod.yml )
	kubectl create -f cadvisor_deploy.yml 	(In case run via github: kubectl create -f https://raw.githubusercontent.com/praparn/kubernetes_201911/master/WorkShop_1.7_Resource_Management/cadvisor_deploy.yml )
	kubectl get pods --show-labels

4. Open another shell for access minikube vm by command:
	Open browser: http://<Public IP>:31000
	export TERM=xterm
	sudo apt-get install -y htop
	htop

5. Generate Load (T1) and check load on another terminal by command:
	kubectl exec webtest -c webtest md5sum /dev/urandom
	<Ctrl+C> for exit execute shell
	htop

6. Generate Load (T2) and check load on another terminal by command:
	kubectl exec webtest -c webtest md5sum /dev/urandom
	<Ctrl+C> for exit execute shell
	htop

7. Generate Load (T3) and check load on another terminal by command:
	kubectl exec webtest -c webtest md5sum /dev/urandom
	<Ctrl+C> for exit execute shell
	htop

8. Generate Load (T4) and check load on another terminal by command:
	kubectl exec webtest -c webtest md5sum /dev/urandom
	<Ctrl+C> for exit execute shell
	htop

9. Check configure for resource allocation on node by command:
	kubectl describe node

10. Cancel all work load and Delete Pods by command:
	kubectl delete -f webtest_pod.yml	(In case run via github: kubectl delete -f https://raw.githubusercontent.com/praparn/kubernetes_201911/master/WorkShop_1.7_Resource_Management/webtest_pod.yml)


====================================================
Part 2: Name space level configuration:
====================================================

1. Create Namespace by command:
	kubectl create -f webtest_namespace.yml (In case run via github: kubectl create -f https://raw.githubusercontent.com/praparn/kubernetes_201911/master/WorkShop_1.7_Resource_Management/webtest_namespace.yml)

2. Create Quota and attach to Namespace and view describe by command:
	kubectl create -f webtest_quota.yml  --namespace=webtest-namespace (In case run via github: kubectl create -f https://raw.githubusercontent.com/praparn/kubernetes_201911/master/WorkShop_1.7_Resource_Management/webtest_quota.yml  --namespace=webtest-namespace)
	kubectl describe namespace/webtest-namespace

3. Try to create deployment by command:
	kubectl create -f webtest_deploy.yml  --namespace=webtest-namespace	(In case run via github: kubectl create -f https://raw.githubusercontent.com/praparn/kubernetes_201911/master/WorkShop_1.7_Resource_Management/webtest_deploy.yml   --namespace=webtest-namespace)

4. Check completeness of deployment/rs/pods/svc by command:
	kubectl get deployment/webtest --namespace=webtest-namespace
	kubectl get rs --namespace=webtest-namespace
	kubectl get svc/webtest --namespace=webtest-namespace
	kubectl get pods --namespace=webtest-namespace

5. Check full describe of deployment/rs/pod by command:
	kubectl describe deployment/webtest --namespace=webtest-namespace
	kubectl describe rs --namespace=webtest-namespace

6. Create LimitRange attach to Namespace and view descibe by command:
	kubectl create -f webtest_limit.yml  --namespace=webtest-namespace	(In case run via github: kubectl create -f https://raw.githubusercontent.com/praparn/kubernetes_201911/master/WorkShop_1.7_Resource_Management/webtest_limit.yml  --namespace=webtest-namespace)
	kubectl describe namespace/webtest-namespace

7. Recreate Deployment by command:
	kubectl delete -f webtest_deploy.yml  --namespace=webtest-namespace	(In case run via github: kubectl delete -f https://raw.githubusercontent.com/praparn/kubernetes_201911/master/WorkShop_1.7_Resource_Management/webtest_deploy.yml  --namespace=webtest-namespace)
	kubectl create -f webtest_deploy.yml  --namespace=webtest-namespace	(In case run via github: kubectl create -f https://raw.githubusercontent.com/praparn/kubernetes_201911/master/WorkShop_1.7_Resource_Management/webtest_deploy.yml   --namespace=webtest-namespace)

8. Check completeness of deployment/rs/pods/svc by command:
	kubectl get deployment/webtest --namespace=webtest-namespace
	kubectl get rs --namespace=webtest-namespace
	kubectl get svc/webtest --namespace=webtest-namespace
	kubectl get pods --namespace=webtest-namespace

9. Verify configuration on Pods by command:
	kubectl describe pods <pods name> --namespace=webtest-namespace

10. Start burn test cpu and monitor cpu by command:
	kubectl exec <pod name> -c webtest md5sum /dev/urandom --namespace=webtest-namespace
	<When finished> <Ctrl+c> for cancel
	htop

11. Set resource for Deployment to Normal "0.8CPU", "800MB memory" by command:
kubectl set resources deployment/webtest --limits=cpu="1",memory=1Gi --requests=cpu="0.8",memory=800Mi --record --namespace=webtest-namespace
kubectl rollout status deployment/webtest --namespace=webtest-namespace
kubectl get rs --namespace=webtest-namespace
kubectl get pods --namespace=webtest-namespace
kubectl describe pods <pods name> --namespace=webtest-namespace

12. Clean up lab by command:
	kubectl delete -f webtest_deploy.yml --namespace=webtest-namespace	(In case run via github: kubectl delete -f https://raw.githubusercontent.com/praparn/kubernetes_201911/master/WorkShop_1.7_Resource_Management/webtest_deploy.yml --namespace=webtest-namespace)
	kubectl delete -f cadvisor_deploy.yml	(In case run via github: kubectl delete -f https://raw.githubusercontent.com/praparn/kubernetes_201911/master/WorkShop_1.7_Resource_Management/cadvisor_deploy.yml)
	kubectl delete -f webtest_namespace.yml (In case run via github: kubectl delete -f https://raw.githubusercontent.com/praparn/kubernetes_201911/master/WorkShop_1.7_Resource_Management/webtest_namespace.yml)