Instruction for Workshop 2.2 Kubernetes Security:
Note: This instruction will start lab for kubernetes's cluster for real workshop:
============================================================================================================================================================
Part 1: Network Policy
============================================================================================================================================================
1. Create Application Set by command:
	kubectl apply -f https://raw.githubusercontent.com/praparn/kubernetes_201911/master/WorkShop_2.2_Security/management-ui-set.yml
	kubectl apply -f https://raw.githubusercontent.com/praparn/kubernetes_201911/master/WorkShop_2.2_Security/backend-set.yml
	kubectl apply -f https://raw.githubusercontent.com/praparn/kubernetes_201911/master/WorkShop_2.2_Security/frontend-set.yml
	kubectl apply -f https://raw.githubusercontent.com/praparn/kubernetes_201911/master/WorkShop_2.2_Security/client-set.yml

2. Check Namespace / Service / Pods 
	kubectl get namespace
	kubectl get all -n=management-ui 
	kubectl get all -n=stars
	kubectl get all -n=client

3. Test open browser for check application:
	http://<Publi IP>:32500

4. Apply network policy for denied any connection to namespace: "stars" and "client"
	kubectl apply -f https://raw.githubusercontent.com/praparn/kubernetes_201911/master/WorkShop_2.2_Security/policy-deny-client.yml
	kubectl apply -f https://raw.githubusercontent.com/praparn/kubernetes_201911/master/WorkShop_2.2_Security/policy-deny-stars.yml

5. Test open browser again:
	http://<Publi IP>:32500

6. Apply network policy for allow all pods from namespace "management-ui" (label: role=management-ui) access to any pods in namespace "stars"
	kubectl apply -f https://raw.githubusercontent.com/praparn/kubernetes_201911/master/WorkShop_2.2_Security/policy-allow-ui.yml

7. Apply network policy for allow all pods from namespace "management-ui" (label: role=management-ui) access to any pods in namespace "client"
	kubectl apply -f https://raw.githubusercontent.com/praparn/kubernetes_201911/master/WorkShop_2.2_Security/policy-allow-ui-client.yml

8. Test open browser again:
	http://<Publi IP>:32500

9. Apply network policy for allow pods frontend (label: role=frontend) to pods backend (label: role=backend) in same namespace
	kubectl apply -f https://raw.githubusercontent.com/praparn/kubernetes_201911/master/WorkShop_2.2_Security/policy-allow-backend.yml

10. Apply network policy for allow all pods from namespace "client" (label: role=client) access to pods frontend (label: role=frontend)
	kubectl apply -f https://raw.githubusercontent.com/praparn/kubernetes_201911/master/WorkShop_2.2_Security/policy-allow-frontend.yml

11. Test open browser again:
	http://<Publi IP>:32500

============================================================================================================================================================
Part 2: Pods Security Policy
============================================================================================================================================================
1. Create Application Set by command:
	kubectl apply -f https://raw.githubusercontent.com/praparn/kubernetes_201911/master/WorkShop_2.2_Security/management-ui-set.yml
	kubectl apply -f https://raw.githubusercontent.com/praparn/kubernetes_201911/master/WorkShop_2.2_Security/backend-set.yml
	kubectl apply -f https://raw.githubusercontent.com/praparn/kubernetes_201911/master/WorkShop_2.2_Security/frontend-set.yml
	kubectl apply -f https://raw.githubusercontent.com/praparn/kubernetes_201911/master/WorkShop_2.2_Security/client-set.yml
